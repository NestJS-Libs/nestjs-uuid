name: Pipeline

env:
  NODE_VERSION: 20.10.0

on:
  pull_request:
    branches: ['main', 'develop']
  push:
    branches: ['main', 'develop']

jobs:
  cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Get yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

  lint:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: node_modules
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Lint
        run: yarn lint

  test:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: node_modules
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Test
        run: yarn test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: node_modules
          restore-keys: |
            node_modules

      - name: Build
        run: yarn build
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org/

      - name: Update version
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            yarn version --new-version "$(yarn version --no-git-tag-version --minor) --dev"
          fi

      - name: Commit and push if needed
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'action.bot@github.com'
          git commit -am 'build: increment version' || exit 0
          git push

      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Deploy to npm
        run: yarn deploy
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
